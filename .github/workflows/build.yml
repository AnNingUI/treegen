name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, 1.70.0] # 添加最小支持版本

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}

      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Build project
        run: cargo build --release

      - name: Run tests
        run: cargo test --release

      - name: Package binary (Unix-like)
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist
          cp target/release/treegen LICENSE README.md dist/
          tar -czvf "treegen-${{ runner.os }}-${{ github.sha }}.tar.gz" dist/

      - name: Package binary (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir dist
          Copy-Item target\release\treegen.exe LICENSE README.md dist\
          Compress-Archive -Path dist\* -DestinationPath "treegen-${{ runner.os }}-${{ github.sha }}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: treegen-${{ runner.os }}-${{ github.sha }}
          path: |
            treegen-${{ runner.os }}-${{ github.sha }}.tar.gz
            treegen-${{ runner.os }}-${{ github.sha }}.zip
